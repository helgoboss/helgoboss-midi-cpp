# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
#- task: Cache@2
#  displayName: 'Cache vcpkg's  artifacts'
#  inputs:
#    # As 'key' use the content of the response file, vcpkg's submodule fetched commit id and the platform name.
#    # The key must be one liner, each segment separated by pipe char, non-path segments enclosed by
#    # double quotes.
#    key: $(Build.SourcesDirectory)/vcpkg.txt | "$(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD" | "$(Agent.OS)"
#    path: '$(Build.SourcesDirectory)/lib/vcpkg'
# - task: run-vcpkg@0
#   displayName: 'Run vcpkg'
#   inputs:
#     vcpkgArguments: @$(Build.SourcesDirectory)/vcpkg.txt
#     vcpkgDirectory: $(Build.SourcesDirectory)/lib/vcpkg
- task: run-cmake@0
  inputs:
    cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
    useVcpkgToolchainFile: true
    cmakeBuildType: 'RelWithDebInfo'
    cmakeGenerator: 'UnixMakefiles'